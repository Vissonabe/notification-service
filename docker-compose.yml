
version: '3.8'

services:
  # Notification service
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification-service
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/notification-service
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=dev_secret_change_in_production
      - JWT_EXPIRATION=1h
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=notification-service
      - KAFKA_GROUP_ID=notification-service-group
    depends_on:
      - mongo
      - redis
      - kafka
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    networks:
      - notification-network

  # MongoDB
  mongo:
    image: mongo:5.0
    container_name: notification-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - notification-network

  # Redis for queues and caching
  redis:
    image: redis:6-alpine
    container_name: notification-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - notification-network

  # MongoDB admin interface
  mongo-express:
    image: mongo-express
    container_name: notification-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
    depends_on:
      - mongo
    networks:
      - notification-network

  # Redis admin interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: notification-redis-commander
    restart: always
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - notification-network

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: notification-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - notification-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: notification-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - notification-network

  # Kafka UI (optional but helpful)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: notification-kafka-ui
    ports:
      - "8083:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - notification-network

volumes:
  mongo-data:
  redis-data:

networks:
  notification-network:
    driver: bridge 
